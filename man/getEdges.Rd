% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getEdges.R
\name{getEdges}
\alias{getEdges}
\title{Choose edges from an edge sequence}
\usage{
getEdges(
  g,
  n = 1,
  es = E(g),
  mode = c("random", "targeted", "proba"),
  ct.ind.FUN = edge_betweenness,
  ct.ind.w = 1,
  sp.dist.attr = "dist",
  sp.dist.w = 0
)
}
\arguments{
\item{g}{An igraph object.}

\item{n}{Number of edges returned. Default is 1.}

\item{es}{The edges set among which to choose. Default is all graph edges.}

\item{mode}{Method used to choose the edge(s): "random" (default), "targeted"
(e.g. take the n more central edges), or "proba" (e.g. more central and longest
spatial-dist edges are more likely to be chosen). *.w arguments influence targetd
and proba modes.}

\item{ct.ind.FUN}{function used to compute centrality index of the edge sequence.
Used only if ci.w > 0. Default is \code{\link{edge_betweenness}}.}

\item{ct.ind.w}{exponent weighting edge centrality index in probabilities mix.
If negative, less central edges are more likely to be chosen. Default is 1.}

\item{sp.dist.attr}{Name of edge attribute containing spatial distance.
If negative, shortest-distance edges are more likely to be chosen. Default is 0.}

\item{sp.dist.w}{Eponent weighting spatial distance in probabilities mix.}
}
\value{
An igraph.es edge or edges sequence.
}
\description{
Selecting graph edges randomly, or according to probabilities. Probabilities
can depend on 2 criterias: centrality index (betweenness, sum of extremities
degree, etc) and/or spatial distance. These are used only of their weight > 0.
By default, spatial distance is ignored (weight exponent = 0).
}
\examples{
library(igraph)
g = erdos.renyi.game(100, 120, 'gnm')
## Get a random edge
getEdges(g)
## Get the highest betweenness edge
getEdges(g, mode="targeted")
# Get 2 edges with high betweenness and low spatial distance
E(g)$dist = runif(length(E(g)))
getEdges(g, n=2, mode="proba", ct.ind.w=2, sp.dist.w=-3)

}
