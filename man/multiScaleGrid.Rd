% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiscaleGrid.R
\name{multiScaleGrid}
\alias{multiScaleGrid}
\title{Create a multiscale grid}
\usage{
multiScaleGrid(sf, xref = NULL, yref = NULL, scales, buffers)
}
\arguments{
\item{sf}{sf class; the spatial object grid cells will cover.}

\item{xref}{numeric; x coordinate of reference pixel bottomleft corner.
If NULL (default), the center of the extent is taken.}

\item{yref}{numeric; y coordinate of reference pixel bottomleft corner.
If NULL (default), the center of the extent is taken.}

\item{scales}{numeric; resolution of the raster cells, expressed in units of
\code{extent} CRS. If CRS is EPSG:2154, scale is in meters. If EPSG:4326,
it is in decimal degrees.}

\item{buffers}{sf class; a list of buffers.}
}
\value{
a sf class grid.
}
\description{
Create a multiscale grid
}
\examples{
library(sf)
## Open Sein river data
data(seine, package="spData")
plot(st_geometry(seine))
## Create a point for Paris
xref = 652215.52
yref = 6861681.77
centro = st_sf(st_sfc(st_point(c(xref, yref)), crs=2154))
plot(st_geometry(centro), col="red", pch=19, add=TRUE)
# Create a list of 3 buffers of 20, 100 and 500km
radius = c(50000, 100000, 200000)
radius = rev(radius)
buffers = lapply(radius, function(r) st_buffer(centro, dist=r))
lapply(buffers, function(x) plot(st_geometry(x), border="blue", add=TRUE))
# Set grid cells scales of 1, 10 and 50km, and create multiscale grid
scales = c(5000, 10000, 20000)
scales = rev(scales)
grid = multiScaleGrid(sf=seine, xref, yref, scales, buffers)
plot(st_geometry(grid), col=NA, add=TRUE)

}
